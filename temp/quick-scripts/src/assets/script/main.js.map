{"version":3,"sources":["assets/script/main.js"],"names":["cc","Class","Component","properties","block_generate","Node","collider","BoxCollider","onLoad","director","getPhysicsManager","enabled","start","getCollisionManager","node","on","EventType","TOUCH_START","touch","event","touchLoc","getLocation","Intersection","pointInPolygon","world","points","console","log","point","point_node","convertToNodeSpaceAR","point_node1","convertToWorldSpaceAR","setPosition","v2","x","y","onCollisionEnter","other","self","onCollisionExit"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACVC,IAAAA,cAAc,EAAEJ,EAAE,CAACK,IADT;AAEVC,IAAAA,QAAQ,EAAEN,EAAE,CAACO;AAFH,GAHP;AAQL;AAEAC,EAAAA,MAVK,oBAUK;AACRR,IAAAA,EAAE,CAACS,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0C,IAA1C;AAED,GAbI;AAeLC,EAAAA,KAfK,mBAeI;AAAA;;AACPZ,IAAAA,EAAE,CAACS,QAAH,CAAYI,mBAAZ,GAAkCF,OAAlC,GAA4C,IAA5C;AAEA,SAAKL,QAAL,CAAcQ,IAAd,CAAmBC,EAAnB,CAAsBf,EAAE,CAACK,IAAH,CAAQW,SAAR,CAAkBC,WAAxC,EAAqD,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC1E,UAAIC,QAAQ,GAAGF,KAAK,CAACG,WAAN,EAAf;;AAEA,UAAGrB,EAAE,CAACsB,YAAH,CAAgBC,cAAhB,CAA+BH,QAA/B,EAAyC,KAAKd,QAAL,CAAckB,KAAd,CAAoBC,MAA7D,CAAH,EAAyE;AACvEC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,OAFD,MAEK;AACHD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,KARD,EAQG,IARH;AAUAD,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,SAAKb,IAAL,CAAUC,EAAV,CAAa,YAAb,EAA2B,UAACI,KAAD,EAAS;AAClC,UAAIS,KAAK,GAAGT,KAAK,CAACE,WAAN,EAAZ,CADkC,CAElC;;AACA,UAAIQ,UAAU,GAAG,KAAI,CAACf,IAAL,CAAUgB,oBAAV,CAA+BF,KAA/B,CAAjB;;AACA,UAAIG,WAAW,GAAG,KAAI,CAACjB,IAAL,CAAUkB,qBAAV,CAAgCJ,KAAhC,CAAlB,CAJkC,CAKlC;AACA;;;AACA,MAAA,KAAI,CAACxB,cAAL,CAAoB6B,WAApB,CAAgCjC,EAAE,CAACkC,EAAH,CAAML,UAAU,CAACM,CAAjB,EAAoBN,UAAU,CAACO,CAA/B,CAAhC;AACD,KARD;AASD,GAtCI;AAwCL;AACAC,EAAAA,gBAAgB,EAAC,0BAASC,KAAT,EAAgBC,IAAhB,EAAsB;AACrCb,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,GA3CI;AA4CLa,EAAAA,eAAe,EAAE,yBAASF,KAAT,EAAgBC,IAAhB,EAAsB;AACrCb,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AA9CI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n      block_generate: cc.Node,\n      collider: cc.BoxCollider\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n      cc.director.getPhysicsManager().enabled = true;\n     \n    },\n\n    start () {\n      cc.director.getCollisionManager().enabled = true;\n\n      this.collider.node.on(cc.Node.EventType.TOUCH_START, function(touch, event) {\n        let touchLoc = touch.getLocation()\n\n        if(cc.Intersection.pointInPolygon(touchLoc, this.collider.world.points)) {\n          console.log('hit');\n        }else{\n          console.log('no hit');\n        }\n      }, this)\n\n      console.log(1);\n      this.node.on('touchstart', (event)=>{\n        let point = event.getLocation()\n        // console.table(point)\n        let point_node = this.node.convertToNodeSpaceAR(point)\n        let point_node1 = this.node.convertToWorldSpaceAR(point)\n        // console.table(point_node)\n        // console.table(point_node1)\n        this.block_generate.setPosition(cc.v2(point_node.x, point_node.y))\n      })\n    },\n\n    // update (dt) {},\n    onCollisionEnter:function(other, self) {\n      console.log('collision');\n    },\n    onCollisionExit: function(other, self) {\n      console.log('collision exit');\n    }\n});\n"]}