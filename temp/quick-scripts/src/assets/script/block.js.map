{"version":3,"sources":["assets\\script\\block.js"],"names":["cc","Class","Component","properties","spriteFrameList","type","SpriteFrame","start","changeSpriteFrame","i","node_sprite","node","getComponent","Sprite","spriteFrame","onBeginContact","contact","selfCollider","otherCollider","console","log","js_otherBlock"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,eAAe,EAAE;AACbC,MAAAA,IAAI,EAAEL,EAAE,CAACM,WADI;AAEb,iBAAS;AAFI;AADT,GAHP;AAUL;AAEA;AAEAC,EAAAA,KAdK,mBAcI,CAER,CAhBI;AAiBL;AACAC,EAAAA,iBAlBK,6BAkBaC,CAlBb,EAkBe;AAChB,QAAIC,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBZ,EAAE,CAACa,MAA1B,CAAlB;AACAH,IAAAA,WAAW,CAACI,WAAZ,GAA0B,KAAKV,eAAL,CAAqBK,CAArB,CAA1B;AACH,GArBI;AAuBL;AACA;AACAM,EAAAA,cAAc,EAAE,wBAASC,OAAT,EAAkBC,YAAlB,EAAgCC,aAAhC,EAA+C;AAC3DC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAIC,aAAa,GAAGH,aAAa,CAACP,IAAd,CAAmBC,YAAnB,CAAgC,OAAhC,CAApB;;AACA,QAAGS,aAAH,EAAkB,CAChB;AACA;AACA;AACA;AACD;AACJ,GAlCI,CAoCL;;AApCK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        spriteFrameList: {\r\n            type: cc.SpriteFrame,\r\n            default: []\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n    // 改变预制体的背景spritFrame, 这样不用创建多个预制体\r\n    changeSpriteFrame(i){\r\n        let node_sprite = this.node.getComponent(cc.Sprite)\r\n        node_sprite.spriteFrame = this.spriteFrameList[i]\r\n    },\r\n\r\n    // 相同元素碰撞后消失\r\n    // 只在两个碰撞体开始接触时被调用一次\r\n    onBeginContact: function(contact, selfCollider, otherCollider) {\r\n        console.log('只在两个碰撞体开始接触时被调用一次')\r\n        let js_otherBlock = otherCollider.node.getComponent('block')\r\n        if(js_otherBlock) {\r\n          // if(this.block_type == js_otherBlock.block_type) {\r\n          //   this.node.removeFromParent()\r\n          //   otherCollider.node.removeFromParent()\r\n          // }\r\n        }\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}