{"version":3,"sources":["assets\\script\\block.js"],"names":["cc","Class","Component","properties","spriteFrameList","type","SpriteFrame","start","can_conllision","changeSpriteFrame","i","node_sprite","node","getComponent","Sprite","spriteFrame","onBeginContact","contact","selfCollider","otherCollider","console","log","js_otherBlock","block_type","position_self","getPosition","position_other","position_new","y","typeNumber","Number","split","removeFromParent","main","createTx","scheduleOnce","createBlock","addScore","bind"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACP,aAASD,EAAE,CAACE,SADL;AAGPC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAEL,EAAE,CAACM,WADM;AAEf,iBAAS;AAFM;AADP,GAHL;AAWP;AAEA;AAEAC,EAAAA,KAfO,mBAeE;AACP,SAAKC,cAAL,GAAsB,IAAtB;AACD,GAjBM;AAkBP;AACAC,EAAAA,iBAnBO,6BAmBYC,CAnBZ,EAmBe;AACpB,QAAIC,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBb,EAAE,CAACc,MAA1B,CAAlB;AACAH,IAAAA,WAAW,CAACI,WAAZ,GAA0B,KAAKX,eAAL,CAAqBM,CAArB,CAA1B;AACD,GAtBM;AAwBP;AACA;AACAM,EAAAA,cAAc,EAAE,wBAAUC,OAAV,EAAmBC,YAAnB,EAAiCC,aAAjC,EAAgD;AAC9DC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAIC,aAAa,GAAGH,aAAa,CAACP,IAAd,CAAmBC,YAAnB,CAAgC,OAAhC,CAApB;;AACA,QAAIS,aAAa,IAAI,KAAKd,cAA1B,EAA0C;AACxC,UAAI,KAAKI,IAAL,CAAUW,UAAV,IAAwBD,aAAa,CAACV,IAAd,CAAmBW,UAA/C,EAA2D;AACzD,YAAIC,aAAa,GAAG,KAAKZ,IAAL,CAAUa,WAAV,EAApB;AACA,YAAIC,cAAc,GAAGP,aAAa,CAACP,IAAd,CAAmBa,WAAnB,EAArB;AACA,YAAIE,YAAY,GAAGH,aAAnB;;AAEA,YAAIG,YAAY,CAACC,CAAb,GAAiBF,cAAc,CAACE,CAApC,EAAuC;AACrCD,UAAAA,YAAY,GAAGD,cAAf;AACD;;AAED,YAAIG,UAAU,GAAGC,MAAM,CAAC,KAAKlB,IAAL,CAAUW,UAAV,CAAqBQ,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAD,CAAvB;AACA,aAAKnB,IAAL,CAAUoB,gBAAV;AACAb,QAAAA,aAAa,CAACP,IAAd,CAAmBoB,gBAAnB;AACA,aAAKxB,cAAL,GAAsB,KAAtB;AACAc,QAAAA,aAAa,CAACd,cAAd,GAA+B,KAA/B;AAEAyB,QAAAA,IAAI,CAACC,QAAL,CAAcV,aAAd,EAA6BK,UAA7B;AACAI,QAAAA,IAAI,CAACC,QAAL,CAAcR,cAAd,EAA8BG,UAA9B,EAhByD,CAkBzD;;AACA,aAAKM,YAAL,CAAkB,YAAY;AAC5B;AACAF,UAAAA,IAAI,CAACG,WAAL,CAAiBT,YAAjB,EAA+BE,UAA/B,EAA2C,IAA3C;AACAI,UAAAA,IAAI,CAACI,QAAL;AACD,SAJiB,CAIhBC,IAJgB,CAIX,IAJW,CAAlB,EAIc,IAJd;AAKD;AACF;AACF,GAxDM,CA0DP;;AA1DO,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    spriteFrameList: {\r\n      type: cc.SpriteFrame,\r\n      default: []\r\n    },\r\n   \r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  // onLoad () {},\r\n\r\n  start () {\r\n    this.can_conllision = true\r\n  },\r\n  // 改变预制体的背景spritFrame, 这样不用创建多个预制体\r\n  changeSpriteFrame (i) {\r\n    let node_sprite = this.node.getComponent(cc.Sprite)\r\n    node_sprite.spriteFrame = this.spriteFrameList[i]\r\n  },\r\n\r\n  // 相同元素碰撞后消失\r\n  // 只在两个碰撞体开始接触时被调用一次\r\n  onBeginContact: function (contact, selfCollider, otherCollider) {\r\n    console.log('只在两个碰撞体开始接触时被调用一次')\r\n    let js_otherBlock = otherCollider.node.getComponent('block')\r\n    if (js_otherBlock && this.can_conllision) {\r\n      if (this.node.block_type == js_otherBlock.node.block_type) {\r\n        let position_self = this.node.getPosition()\r\n        let position_other = otherCollider.node.getPosition()\r\n        let position_new = position_self\r\n\r\n        if (position_new.y > position_other.y) {\r\n          position_new = position_other\r\n        }\r\n\r\n        let typeNumber = Number(this.node.block_type.split('k')[1])\r\n        this.node.removeFromParent()\r\n        otherCollider.node.removeFromParent()\r\n        this.can_conllision = false\r\n        js_otherBlock.can_conllision = false\r\n\r\n        main.createTx(position_self, typeNumber)\r\n        main.createTx(position_other, typeNumber)\r\n\r\n        // 只执行一次的定时器 0.15s\r\n        this.scheduleOnce(function () {\r\n          // 在main.js中申明window.main = this\r\n          main.createBlock(position_new, typeNumber, true)\r\n          main.addScore()\r\n        }.bind(this), 0.15)\r\n      }\r\n    }\r\n  },\r\n\r\n  // update (dt) {},\r\n});\r\n"]}